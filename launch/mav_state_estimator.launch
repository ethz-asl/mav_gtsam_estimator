<?xml version="1.0" encoding="UTF-8"?>
<launch>
  <arg name="mav_name" default="moa"/>
  <arg name="replay_bag" default="false"/>
  <arg name="bag_base" default="/home/rik/data/2020_12_18_hoengg/01_csar_no_cam/csar_filtered_imu"/>
  <arg name="record" default="false"/>
  <arg name="visualize" default="false"/>
  <arg name="output" default="screen"/>
  <arg name="run_estimator" default="true"/>
  <arg name="euler" default="true"/>
  <arg name="gt" default="false"/>

  <group ns="$(arg mav_name)">
    <!-- External markers -->
    <node pkg="tf2_ros" type="static_transform_publisher" name="flu_broadcaster" args="0 0 0 3.14159265359 0 0 adis16448bmlz FLU"/>

    <!-- Start rosbag -->
    <group if="$(arg replay_bag)">
      <node pkg="rosbag" type="play" name="rosbag_play" output="$(arg output)" args="-q -r 1 --clock $(arg bag_base).bag" required="false"/>
    </group>

    <!-- Estimator -->
    <group if="$(arg run_estimator)">
      <node name="mav_state_estimator" pkg="mav_state_estimation" type="mav_state_estimator" clear_params="true" output="$(arg output)">
        <remap from="imu0" to="adis16448bmlz/imu"/>
        <remap from="pos0" to="piksi/position_receiver_0/ros/pos_enu_cov"/>
        <remap from="baseline0" to="piksi/attitude_receiver_0/ros/baseline_ned"/>
        <rosparam file="$(find mav_state_estimation)/cfg/estimator.yaml"/>
      </node>
    </group>

    <group if="$(arg euler)">
      <node
        name="euler_optimization_pub"
        pkg="topic_tools"
        type="transform"
        output="$(arg output)"
        args="/$(arg mav_name)/mav_state_estimator/optimization /$(arg mav_name)/mav_state_estimator/optimization_euler geometry_msgs/Vector3Stamped 'geometry_msgs.msg.Vector3Stamped(header=m.header, vector=geometry_msgs.msg.Vector3(*[math.degrees(x) for x in tf.transformations.euler_from_quaternion([m.transform.rotation.x, m.transform.rotation.y, m.transform.rotation.z, m.transform.rotation.w])]))' --import math tf geometry_msgs std_msgs"/>

      <node
        name="euler_prediction_pub"
        pkg="topic_tools"
        type="transform"
        output="$(arg output)"
        args="/$(arg mav_name)/mav_state_estimator/prediction /$(arg mav_name)/mav_state_estimator/prediction_euler geometry_msgs/Vector3Stamped 'geometry_msgs.msg.Vector3Stamped(header=m.header, vector=geometry_msgs.msg.Vector3(*[math.degrees(x) for x in tf.transformations.euler_from_quaternion([m.transform.rotation.x, m.transform.rotation.y, m.transform.rotation.z, m.transform.rotation.w])]))' --import math tf geometry_msgs std_msgs"/>

      <node
        name="euler_batch_pub"
        pkg="topic_tools"
        type="transform"
        output="$(arg output)"
        args="/$(arg mav_name)/mav_state_estimator/batch /$(arg mav_name)/mav_state_estimator/batch_euler geometry_msgs/Vector3Stamped 'geometry_msgs.msg.Vector3Stamped(header=m.header, vector=geometry_msgs.msg.Vector3(*[math.degrees(x) for x in tf.transformations.euler_from_quaternion([m.transform.rotation.x, m.transform.rotation.y, m.transform.rotation.z, m.transform.rotation.w])]))' --import math tf geometry_msgs std_msgs"/>

    </group>

    <group if="$(arg gt)">

      <node
        name="euler_gt_pub"
        pkg="topic_tools"
        type="transform"
        output="$(arg output)"
        args="/$(arg mav_name)/mav_state_estimator/gt_odometry /$(arg mav_name)/mav_state_estimator/gt_euler geometry_msgs/Vector3Stamped 'geometry_msgs.msg.Vector3Stamped(header=m.header, vector=geometry_msgs.msg.Vector3(*[math.degrees(x) for x in tf.transformations.euler_from_quaternion([m.pose.pose.orientation.x, m.pose.pose.orientation.y, m.pose.pose.orientation.z, m.pose.pose.orientation.w])]))' --import math tf geometry_msgs std_msgs"/>

    </group>

    <!-- Rosbag -->
    <group if="$(arg record)">
      <node
        pkg="rosbag"
        type="record"
        name="record"
        output="$(arg output)"
        args="--buffsize=0
        --output-prefix=$(arg bag_base)_estimator
        /$(arg mav_name)/mav_state_estimator/optimization
        /$(arg mav_name)/mav_state_estimator/prediction
        /$(arg mav_name)/mav_state_estimator/batch
        /$(arg mav_name)/mav_state_estimator/acc_bias
        /$(arg mav_name)/mav_state_estimator/gyro_bias
        /$(arg mav_name)/mav_state_estimator/batch_acc_bias
        /$(arg mav_name)/mav_state_estimator/batch_gyro_bias
        /$(arg mav_name)/mav_state_estimator/position_antenna
        /$(arg mav_name)/mav_state_estimator/attitude_antenna
        /$(arg mav_name)/piksi/attitude_receiver_0/ros/baseline_ned"/>
    </group>

    <!-- Viz -->
    <group if="$(arg visualize)">
      <node name="rviz" pkg="rviz" type="rviz" output="$(arg output)" args="-d $(find mav_state_estimation)/cfg/rviz_config.rviz"/>
      <node name="multiplot" pkg="rqt_multiplot" type="rqt_multiplot" output="$(arg output)" args="--multiplot-config $(find mav_state_estimation)/cfg/rqt_multiplot.xml --multiplot-run-all"/>
    </group>
  </group>
</launch>
