#!/usr/bin/python

# MIT License
#
# Copyright (c) 2021 Rik Baehnemann, ASL, ETH Zurich, Switzerland
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

import rospy

from mav_state_estimation.csv_export import*
from mav_state_estimation.srv import BagToCsv, BagToCsvResponse
from mav_state_estimation.msg import BatchStatus

global new_request
global request

def bag_to_csv(req):
    global new_request
    rospy.loginfo("CSV export requested.")
    if new_request:
        rospy.logwarn("Already exporting.")
    else:
        new_request = True
        global request
        request = req
    return BagToCsvResponse()

if __name__ == '__main__':
    rospy.init_node('bag_to_csv')
    new_request = False
    rospy.Service('~bag_to_csv', BagToCsv, bag_to_csv)
    status_pub = rospy.Publisher('~status', BatchStatus, queue_size=1)

    rate = rospy.Rate(2)
    while not rospy.is_shutdown():
        if new_request:
            request.topics = request.topics.replace(" ", "")
            topics = request.topics.split(",")
            rospy.loginfo("Exporting the following poses: %s from bag %s" %(topics, request.bag_file))
            if toCsv(request.bag_file, topics, status_pub):
                rospy.loginfo("Finished export.")
            else:
                rospy.logerr("Failed export.")
            new_request = False

        rate.sleep()
